
========
存储：1.内存存储 2.文件存储 3.数据库存储

redis 学习总结：key-value 数据库(BSD)
1.redis支持数据的持久化，可以将内存中的数据保存在磁盘上，重启的时候可以再次加载
2.提供list,set ,zset ,hash等结构的存储
3.支持数据的备份，即master-slave模式的数据备份
4.单个操作是原子性的。多个操作也支持事务，即原子性，通过MULTI和EXEC指令包起来。

检查redis服务器系统进程
kaichangzhu@bogon:~$ ps -aux|grep redis
检查Redis服务器状态
kaichangzhu@bogon:~$ netstat -nlt|grep 6379

sudo /etc/init.d/redis-server status

通过命令行客户端访问Redis
在本机输入redis-cli命令就可以启动，客户端程序访问Redis服务器。

Redis数据备份和恢复
备份
redis 127.0.0.1:6379> SAVE 该命令将在redis安装目录中创建dump.rdb文件
数据恢复
只需将备份文件 (dump.rdb) 移动到 redis 安装目录并启动服务即可。获取 redis 目录可以使用 CONFIG 命令，如下所示： 
redis 127.0.0.1:6379> CONFIG GET dir
1) "dir"
2) "/usr/local/redis/bin"
以上命令 CONFIG GET dir 输出的 redis 安装目录为 /usr/local/redis/bin.
 
Bgsave
创建 redis 备份文件也可以使用命令 BGSAVE，该命令在后台执行
127.0.0.1:6379> BGSAVE

密码设置
CONFIG get requirepass（检查密码）
127.0.0.1:6379> CONFIG set requirepass "XXXXX"(设置密码)

Redis性能检测
Redis 性能测试是通过同时执行多个命令实现的。
redis-benchmark [option] [option value]

以下实例同时执行 10000 个请求来检测性能
redis-benchmark -n 10000

redis-benchmark -h 127.0.0.1 -p 6379 -t set,lpush -n 10000 -q

SET: 146198.83 requests per second
LPUSH: 145560.41 requests per second
以上实例中主机为 127.0.0.1，端口号为 6379，执行的命令为 set,lpush，请求数为 10000，通过 -q 参数让结果只显示每秒执行的请求数。

客户端连接：
最大连接数(可以修改)maxclients 的默认值是 10000;可以在 redis.conf 中对这个值进行修改。
config get maxclients
1) "maxclients"
2) "10000"


以下实例我们在服务启动时设置最大连接数为 100000：
redis-server --maxclients 100000

Redis管道技术:
Redis 管道技术可以在服务端未响应时，客户端可以继续向服务端发送请求，并最终一次性读取所有服务端的响应。

查看 redis 管道，只需要启动 redis 实例并输入以下命令：
$(echo -en "PING\r\n SET runoobkey redis\r\nGET runoobkey\r\nINCR visitor\r\nINCR visitor\r\nINCR visitor\r\n"; sleep 10) | nc localhost 6379

master/slave(主写从读)































